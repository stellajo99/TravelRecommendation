import requests
import pandas as pd
import numpy as np
from haversine import haversine
import pymysql
import geopandas as gpd
from shapely.geometry.multipolygon import MultiPolygon
from shapely.geometry import Polygon, Point
import matplotlib.pyplot as plt

df = pd.read_csv('noise_filtered.csv')


from shapely.geometry import Polygon

geo = {'type': 'Polygon',
 'coordinates': [[[116.38, 40.825],
    [116.37, 40.845],
    [116.31, 40.89],
    [116.315, 40.94],
    [116.35, 40.96],
    [116.375, 40.96],
    [116.41, 40.92],
    [116.44, 40.92],
    [116.42, 40.95],
    [116.435, 40.995],
    [116.455, 41.005],
    [116.505, 40.995],
    [116.53, 41.01],
    [116.57, 41.01],
    [116.59, 40.995],
    [116.59, 41.06],
    [116.62, 41.08],
    [116.645, 41.08],
    [116.665, 41.065],
    [116.695, 41.06],
    [116.715, 41.02],
    [116.695, 40.99],
    [116.7, 40.96],
    [116.735, 40.935],
    [116.735, 40.915],
    [116.785, 40.895],
    [116.81, 40.865],
    [116.845, 40.86],
    [116.88, 40.84],
    [116.91, 40.805],
    [116.91, 40.795],
    [116.94, 40.78],
    [116.94, 40.755],
    [116.95, 40.755],
    [116.955, 40.74],
    [116.965, 40.74],
    [116.98, 40.72],
    [117.025, 40.715],
    [117.115, 40.725],
    [117.135, 40.715],
    [117.205, 40.715],
    [117.24, 40.695],
    [117.265, 40.7],
    [117.285, 40.68],
    [117.305, 40.675],
    [117.32, 40.68],
    [117.325, 40.69],
    [117.36, 40.7],
    [117.425, 40.705],
    [117.445, 40.695],
    [117.505, 40.69],
    [117.53, 40.66],
    [117.505, 40.615],
    [117.485, 40.61],
    [117.455, 40.615],
    [117.445, 40.605],
    [117.43, 40.605],
    [117.445, 40.57],
    [117.425, 40.55],
    [117.37, 40.54],
    [117.34, 40.56],
    [117.31, 40.555],
    [117.265, 40.535],
    [117.275, 40.53],
    [117.28, 40.515],
    [117.27, 40.495],
    [117.24, 40.49],
    [117.28, 40.44],
    [117.255, 40.41],
    [117.25, 40.38],
    [117.265, 40.37],
    [117.27, 40.35],
    [117.285, 40.345],
    [117.29, 40.335],
    [117.285, 40.32],
    [117.305, 40.305],
    [117.325, 40.31],
    [117.34, 40.305],
    [117.355, 40.25],
    [117.38, 40.25],
    [117.405, 40.235],
    [117.405, 40.205],
    [117.42, 40.195],
    [117.42, 40.175],
    [117.4, 40.155],
    [117.375, 40.15],
    [117.37, 40.13],
    [117.35, 40.115],
    [117.325, 40.11],
    [117.315, 40.115],
    [117.29, 40.095],
    [117.285, 40.1],
    [117.285, 40.09],
    [117.275, 40.085],
    [117.245, 40.095],
    [117.2, 40.045],
    [117.09, 40.05],
    [117.045, 40.03],
    [117.03, 40.01],
    [116.985, 40.01],
    [116.975, 40.02],
    [116.96, 40.015],
    [116.95, 40.025],
    [116.855, 40.02],
    [116.845, 40.03],
    [116.835, 40.03],
    [116.825, 40.01],
    [116.79, 40.01],
    [116.79, 39.985],
    [116.78, 39.975],
    [116.8, 39.95],
    [116.795, 39.91],
    [116.82, 39.905],
    [116.865, 39.865],
    [116.915, 39.87],
    [116.94, 39.845],
    [116.94, 39.825],
    [116.97, 39.79],
    [116.955, 39.76],
    [116.93, 39.76],
    [116.925, 39.75],
    [116.93, 39.72],
    [116.905, 39.71],
    [116.925, 39.685],
    [116.92, 39.665],
    [116.865, 39.645],
    [116.85, 39.63],
    [116.855, 39.62],
    [116.845, 39.6],
    [116.805, 39.595],
    [116.795, 39.575],
    [116.78, 39.57],
    [116.76, 39.575],
    [116.75, 39.595],
    [116.74, 39.595],
    [116.735, 39.575],
    [116.695, 39.565],
    [116.68, 39.58],
    [116.605, 39.58],
    [116.595, 39.595],
    [116.58, 39.6],
    [116.57, 39.585],
    [116.54, 39.575],
    [116.54, 39.56],
    [116.52, 39.55],
    [116.51, 39.53],
    [116.49, 39.53],
    [116.475, 39.51],
    [116.455, 39.505],
    [116.47, 39.445],
    [116.43, 39.42],
    [116.4, 39.43],
    [116.32, 39.435],
    [116.285, 39.47],
    [116.25, 39.475],
    [116.22, 39.505],
    [116.22, 39.545],
    [116.19, 39.565],
    [116.165, 39.565],
    [116.13, 39.545],
    [116.09, 39.555],
    [115.985, 39.555],
    [115.96, 39.54],
    [115.935, 39.545],
    [115.925, 39.56],
    [115.88, 39.525],
    [115.845, 39.525],
    [115.845, 39.5],
    [115.83, 39.485],
    [115.815, 39.49],
    [115.795, 39.485],
    [115.73, 39.495],
    [115.72, 39.525],
    [115.705, 39.525],
    [115.69, 39.545],
    [115.67, 39.55],
    [115.665, 39.585],
    [115.64, 39.575],
    [115.6, 39.58],
    [115.59, 39.57],
    [115.56, 39.57],
    [115.54, 39.59],
    [115.515, 39.57],
    [115.5, 39.57],
    [115.485, 39.6],
    [115.495, 39.625],
    [115.46, 39.63],
    [115.45, 39.645],
    [115.455, 39.67],
    [115.465, 39.68],
    [115.465, 39.72],
    [115.42, 39.735],
    [115.4, 39.765],
    [115.4, 39.785],
    [115.43, 39.805],
    [115.45, 39.8],
    [115.465, 39.815],
    [115.495, 39.815],
    [115.505, 39.805],
    [115.52, 39.81],
    [115.495, 39.82],
    [115.485, 39.835],
    [115.485, 39.855],
    [115.495, 39.86],
    [115.485, 39.87],
    [115.485, 39.895],
    [115.435, 39.93],
    [115.41, 39.93],
    [115.395, 39.955],
    [115.4, 39.96],
    [115.395, 39.97],
    [115.4, 39.99],
    [115.415, 40],
    [115.415, 40.015],
    [115.43, 40.03],
    [115.43, 40.04],
    [115.46, 40.05],
    [115.515, 40.095],
    [115.53, 40.095],
    [115.545, 40.115],
    [115.57, 40.12],
    [115.59, 40.14],
    [115.62, 40.135],
    [115.64, 40.15],
    [115.7, 40.155],
    [115.725, 40.15],
    [115.73, 40.175],
    [115.76, 40.195],
    [115.79, 40.195],
    [115.81, 40.17],
    [115.82, 40.17],
    [115.83, 40.2],
    [115.845, 40.21],
    [115.855, 40.205],
    [115.86, 40.23],
    [115.885, 40.255],
    [115.925, 40.275],
    [115.915, 40.3],
    [115.895, 40.32],
    [115.895, 40.335],
    [115.84, 40.345],
    [115.775, 40.415],
    [115.75, 40.425],
    [115.745, 40.475],
    [115.725, 40.475],
    [115.71, 40.495],
    [115.715, 40.525],
    [115.725, 40.53],
    [115.74, 40.56],
    [115.76, 40.565],
    [115.775, 40.58],
    [115.8, 40.58],
    [115.8, 40.59],
    [115.815, 40.605],
    [115.87, 40.615],
    [115.89, 40.635],
    [115.97, 40.625],
    [115.99, 40.605],
    [116.01, 40.625],
    [116.035, 40.62],
    [116.085, 40.645],
    [116.085, 40.655],
    [116.12, 40.685],
    [116.145, 40.685],
    [116.145, 40.705],
    [116.155, 40.72],
    [116.18, 40.74],
    [116.18, 40.75],
    [116.2, 40.76],
    [116.21, 40.79],
    [116.235, 40.81],
    [116.27, 40.8],
    [116.28, 40.78],
    [116.3, 40.79],
    [116.37, 40.79],
    [116.4, 40.8],
    [116.415, 40.795],
    [116.38, 40.825]]]
}

beijing_polygon = Polygon([tuple(l) for l in geo['coordinates'][0]])
# shape = gpd.GeoSeries(beijing_polygon)
# shape.plot()
# plt.show()

temp = []

for i in range(len(df)):
    test_point = Point(df.iloc[i]['lng'], df.iloc[i]['lat']) # (경도, 위도) (lng, lat)
    if(test_point.within(beijing_polygon) == True):
        print(i,' ', 'In')
        temp.append(df.iloc[i])
    else:
        print(i,' ', 'Out')
        continue

df1 = pd.DataFrame(temp)
n_deleted_points = len(df) - len(df1) # number of deleted points
print(n_deleted_points)

df1.to_csv('within_beijing.csv', index = False)